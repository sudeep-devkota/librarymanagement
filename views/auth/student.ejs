<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Page</title>
    <style>
        /* Basic Styling */
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        .book-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .book-card {
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 16px;
            background-color: #f9f9f9;
        }

        .book-card button {
            padding: 8px 16px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .book-card button:hover {
            background-color: #0056b3;
        }

        .cart {
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

        .cart h2 {
            margin-top: 0;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #ccc;
        }

        .cart-item button {
            padding: 4px 8px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .cart-item button:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <h1>Student Page</h1>
    <h2>Book List</h2>
    <div class="book-list"></div>

    <div class="cart">
        <h2>Cart</h2>
        <div id="cartItems"></div>
    </div>

    <script>
        // Fetch and display books
        async function fetchBooks() {
            try { 
                const response = await fetch('/book/getallbooks');
                if (!response.ok) {
                    throw new Error('Failed to fetch books');
                }

                const books = await response.json();
                const bookList = document.querySelector('.book-list');
                bookList.innerHTML = '';

                books.forEach((book) => {
                    const bookDiv = document.createElement('div');
                    bookDiv.className = 'book-card';
                    bookDiv.innerHTML = `
                        <h3>${book.title}</h3>
                        <p>Author: ${book.author}</p>
                        <p>Genre: ${book.genre}</p>
                        <p>Publication Year: ${book.publication_year}</p>
                        <p>Copies Available: ${book.copies_available}</p>
                        <p>Copies Issued: ${book.copies_issued}</p>
                        <p>Book Status: ${book.book_status}</p>
                        <button onclick="addToCart('${book.title}', '${book.author}')">Add to Cart</button>
                    `;
                    bookList.appendChild(bookDiv);
                });
            } catch (error) {
                console.error('Error fetching books:', error);
                alert('Failed to load books. Please try again later.');
            }
        }

        // Add a book to the cart

        function addToCart(title, author) {
            fetch('book/borrowbook', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                    
                },
                body: JSON.stringify({ title, author })
            })
                .then(response => response.json())
                .then(data => {
                if (data.success) {
                    alert('Book added to cart successfully');
                    displayCart(); // Refresh the cart display
                } else {
                    alert(data.message || 'Failed to add book to cart');
                }
                })
                .catch(error => {
                console.error('Error adding book to cart:', error);
                alert('Failed to add book to cart. Please try again later.');
                })
        }

        // Display the cart
        function displayCart() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const cartItems = document.getElementById('cartItems');
            cartItems.innerHTML = '';

            cart.forEach((item, index) => {
                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';
                cartItem.innerHTML = `
                    <span>${item.title} by ${item.author}</span>
                    <button onclick="removeFromCart(${index})">Remove</button>
                `;
                cartItems.appendChild(cartItem);
            });
        }

        // Remove a book from the cart
        function removeFromCart(index) {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart.splice(index, 1); // Remove the item at the specified index
            localStorage.setItem('cart', JSON.stringify(cart));
            displayCart(); // Refresh the cart display
        }

        // Fetch books and display cart when the page loads
        fetchBooks();
        displayCart();
    </script>
</body>
</html>